version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:14.15"
    steps:
      # install node and checkout code
      - node/install:
          node-version: "14.15"
      - checkout
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install
      # TODO: Install dependencies in the the backend API
      - run:
          name: Install API Dependencies
          command: |
            echo "NODE --version" 
             echo $(node --version)
             echo "NPM --version" 
             echo $(npm --version)
             npm run api:install
      # TODO: Lint the frontend
      - run:
          name: Front-End Lint
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:lint
      # TODO: Build the frontend app
      - run:
          name: Front-End Build
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:build
      # TODO: Build the backend API
      - run:
          name: API Build
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run api:build
  
  deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
    - checkout
    - aws-cli/setup 
    - run:
        name: Install Elastic Beanstalk CLI
        command: |
          pip install awsebcli --upgrade
    - run:
        name: Deploy to Elastic Beanstalk and Set Environment Variables
        command: |

          echo -e "[profile eb-cli]\naws_access_key_id = $AWS_ACCESS_KEY_ID\naws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
          
          eb use udagram-api-dev --profile eb-cli
          
          
          eb setenv POSTGRES_DB=$POSTGRES_DB AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_BUCKET=$AWS_BUCKET AWS_PROFILE=$AWS_PROFILE AWS_REGION=$AWS_REGION AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY JWT_SECRET=$JWT_SECRET POSTGRES_HOST=$POSTGRES_HOST POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_USERNAME=$POSTGRES_USERNAME URL=$URL
          
    - node/install:
        node-version: "14.15"
    - eb/setup
    - aws-cli/setup
    - checkout
    - run:
        name: Deploy App
        # TODO: Install, build, deploy in both apps
        command: |
          npm run api:deploy && npm run frontend:deploy

workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
