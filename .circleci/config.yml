version: 2.1
orbs:
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
jobs:
  build:
    docker:
      - image: 'cimg/node:14.15'
    steps:
      - node/install:
          node-version: '14.15'
      - checkout
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install
      - run:
          name: Install API Dependencies
          command: |
            echo "NODE --version" 
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run api:install
      - run:
          name: Front-End Lint
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:lint
      - run:
          name: Front-End Build
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:build
      - run:
          name: API Build
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run api:build
  deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install:
          node-version: '14.15'
      - eb/setup
      - aws-cli/setup
      - checkout
      - run: 
          name: Set Elastic Beanstalk Environment Variables
          command: |
            eb setenv POSTGRES_DB=$POSTGRES_DB
            AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_BUCKET=$AWS_BUCKET
            AWS_PROFILE=$AWS_PROFILE  AWS_REGION=$AWS_REGION
            AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY JWT_SECRET=$JWT_SECRET
            POSTGRES_HOST=$POSTGRES_HOST POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            POSTGRES_USERNAME=$POSTGRES_USERNAME URL=$URL -e udagram-api-dev
      - run:
          name: Deploy App
          command: |
            npm run api:deploy && npm run frontend:deploy
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
